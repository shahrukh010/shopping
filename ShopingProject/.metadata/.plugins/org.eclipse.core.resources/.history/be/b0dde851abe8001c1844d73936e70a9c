package com.shopme.admin.categories;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;
import java.util.Set;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase.Replace;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.annotation.Rollback;

import com.shopme.common.entity.Categories;

@DataJpaTest(showSql = false)
@AutoConfigureTestDatabase(replace = Replace.NONE) // because of by default testing to InMemory database
@Rollback(false)
public class CategoriesRepositoryTest {

	@Autowired
	private CategoriesRepository repository;

	@Test
	public void createCategories() {

		Categories categories = new Categories("Electronic");
		repository.save(categories);
		assertThat(categories.getId()).isGreaterThan(0);

	}

	@Test
	public void createSubCategories() {

		Categories parent = new Categories(11);
//		Categories subCategories = new Categories("Desktop", parent);
//		Categories laptop = new Categories("Laptop",parent);
//		Categories component = new Categories("Electronic Component",parent);
//		Categories camera = new Categories("Camera", new Categories(2));
//		Categories smartPhones = new Categories("SmartPhones", new Categories(2));
//		Categories saveCat = repository.save(subCategories);

		// crete component subcategories
//		Categories pro = new Categories("Processor", parent);
//		Categories mother = new Categories("Motherboards", parent);
//		Categories cabinet = new Categories("Cabninets", parent);
//		Categories mem = new Categories("Memory", parent);
//		Categories Gc = new Categories("Graphic Cards", parent);
//		Categories cool = new Categories("Cooling", parent);
//		Categories ps = new Categories("Power Supply", parent);
//		Iterable<Categories> saveCat = repository.saveAll(List.of(pro, mother, cabinet, mem, Gc, cool, ps));

		Categories pcOrLapOrEtc = new Categories("Gaming", parent);

		repository.save(pcOrLapOrEtc);

	}

	@Test
	public void getCategories() {

		Categories categories = repository.findById(2).get();// orElseThrow(()->new ResourceNotFoundException("resource
																// not found"));

		Set<Categories> children = categories.getChild();
		for (Categories cat : children)
			System.out.println(cat.getName());
	}

	@Test
	public void hierarchicalCategories() {

		Iterable<Categories> rootCategories = repository.findAll();

		for (Categories root : rootCategories) {

			if (root.getParent() == null)
				System.out.println(root.getName());

			Set<Categories> subCategories = root.getChild();
			for (Categories subCat : subCategories) {

				System.out.println(subCat.getName());
				printChild(subCat, 1);
			}
		}
	}

	public void printChild(Categories parent, int subLevel) {

		int newLevel = subLevel + 1;

		Set<Categories> child = parent.getChild();

		for (Categories sub : child) {

			for (int i = 0; i < newLevel; i++)
				System.out.print(" ");
			System.out.println(sub.getName());

			printChild(sub, 1);
		}
	}

}
